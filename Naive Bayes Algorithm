# Naive Bayes Classification

# Import / Load libraries
#Science Kit Learn (sklearn)    
from pandas import read_csv                                 #csv : Comma Separated Values (This file contains a list of data)
from sklearn.naive_bayes import GaussianNB                  #Naive Bayes Algorithm
from sklearn.model_selection import train_test_split        #Training and testing method
from sklearn.metrics import confusion_matrix,accuracy_score     #for evaluation purpose

# Load Data ## pima-indians-diabetes.data
filename = 'Diabetes.csv'
dataframe = read_csv(filename)

# Separate Input features X and Class variable Y    (Separate X and Y values) (Y is the output we want)
array = dataframe.values
X = array[:,0:8]        #specifies [rows:columns] i.e([all rows,8 columns])
Y = array[:,8]          #[all rows,8 columns]
# Split Training and Testing Data
X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size = 0.2, random_state=1)   #Class balance approach

# Initialize a Naive Bayes Model
model = GaussianNB()

# Fit the model on given Data
model.fit(X_train,Y_train)      #while training give training to both (i.e. X and Y)

# Predict using Naive Bayes Model
Y_predict = model.predict(X_test)       #while testing...Test only X

# Calculate Confusion Matrix
cf_mat=confusion_matrix(Y_test,Y_predict)

# Calculate Accuracy
acc = accuracy_score(Y_test,Y_predict)

#Print Results
print("Confusion Matrix",cf_mat)
print("Accuracy : ",acc)
